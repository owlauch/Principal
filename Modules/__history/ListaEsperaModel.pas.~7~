unit ListaEsperaModel;

interface

uses AssociadoModel, AcervoModel;

type TListaEsperaModel = class
  private
    fId: Integer;
    fDataAtendimento: TDate;
    fDataReserva: TDate;
    fHoraReserva: TTime;
    fAssociado: TAssociadoModel;
    fAcervo: TAcervoModel;
  public
    function GetAcervo: TAcervoModel;
    function GetAssociado: TAssociadoModel;
    function GetDataAtendimento: TDate;
    function GetDataReserva: TDate;
    function GetHoraReserva: TTime;
    function GetId: Integer;
    procedure SetAcervo(const Value: TAcervoModel);
    procedure SetAssociado(const Value: TAssociadoModel);
    procedure SetDataAtendimento(const Value: TDate);
    procedure SetDataReserva(const Value: TDate);
    procedure SetHoraReserva(const Value: TTime);
    procedure SetId(const Value: Integer);
end;

implementation
{ TListaEsperaModel }


function TListaEsperaModel.GetAcervo: TAcervoModel;
begin
  Result:=Self.fAcervo;
end;


function TListaEsperaModel.GetAssociado: TAssociadoModel;
begin
  Result:=Self.fAssociado;
end;


function TListaEsperaModel.GetDataAtendimento: TDate;
begin
  Result:=Self.fDataAtendimento;
end;


function TListaEsperaModel.GetDataReserva: TDate;
begin
  Result:=Self.fDataReserva;
end;


function TListaEsperaModel.GetHoraReserva: TTime;
begin
  Result:=Self.fHoraReserva;
end;


function TListaEsperaModel.GetId: Integer;
begin
  Result:=Self.fId;
end;


procedure TListaEsperaModel.SetAcervo(const Value: TAcervoModel);
begin
  Self.fAcervo:=Value;
end;


procedure TListaEsperaModel.SetAssociado(const Value: TAssociadoModel);
begin
  Self.fAssociado:=Value;
end;


procedure TListaEsperaModel.SetDataAtendimento(const Value: TDate);
begin
  Self.fDataAtendimento:=Value;
end;


procedure TListaEsperaModel.SetDataReserva(const Value: TDate);
begin

end;


procedure TListaEsperaModel.SetHoraReserva(const Value: TTime);
begin

end;


procedure TListaEsperaModel.SetId(const Value: Integer);
begin

end;

end.


